// Body reset
// ----------
.bodyScaffolding(@fontFamily: @baseFontFamily, @fontWeight: 300, @fontSize: @baseFontSize, @lineHeight: @baseLineHeight,
			@color: @textColor, @bgColor: @bodyBackground) {
	body {
	  margin: 0;
	  font-family: @fontFamily;
	  font-weight: @fontWeight;
	  font-size: @fontSize;
	  line-height: @lineHeight;
	  color: @color;
	  background-color: @bgColor;
	}


	// Links
	// -----

	a {
	  color: @linkColor;
	  text-decoration: none;
	}
	a:hover {
	  color: @linkColorHover;
	  text-decoration: underline;
	}
}


.absolute-overlay() {
	display: block;
	position: absolute;
	left:0; right:0;
	width:100%; height:100%;
}

.center-dialog(@width,@height,@padding: 20px) {
	position: absolute;
	left: 50%;
	top: 50%;
	width: @width;
	height: auto;
	margin: 0 auto;
	margin-top: -@height/2 - @padding;
	margin-left: -@width/2 - @padding;
	padding: @padding;
	
	z-index: @z-popup;
}

.center-bottom-dialog(@width,@height,@padding: 20px, @vert-offset:0px) {
	position: absolute;
	left: 50%;
	top: 100%;
	width: @width;
	height: @height;
	margin: 0 auto;
	margin-top: -(@height + @padding)/2 - @vert-offset;
	margin-left: -(@width + @padding)/2;
	padding: @padding;
	
	z-index: @z-popup;
}

.center-top-scroll(@width,@padding:20px,@top:5px) {
	position: absolute;
	left: 50%;
	top: @top;
	margin-left: -@width/2 - @padding;
	padding: @padding;
	width: @width;
	
	z-index: @z-popup;
}

.color-dialog(@from_color: #004892, @to_color: rgba(0,53,110,.2), @to_stop: 50%, @border: none) {
	color: @white;
	border: @border;
	
	background: @from_color;
	background: -moz-linear-gradient(top, @from_color 0%, @to_color @to_stop);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,@from_color), color-stop(@to_stop,@to_color));
	background: -webkit-linear-gradient(top, @from_color 0%, @to_color @to_stop);
	background: -ms-linear-gradient(top, @from_color 0%, @to_color @to_stop);
	background: linear-gradient(top, @from_color 0%, @to_color @to_stop);
	filter: progid:DXImageTransform.Microsoft.gradient(
	startColorstr='@from_color', endColorstr='@to_color',GradientType=0);	
}


// Some magic to get the input boxes to automatically adjust their size based
// on the width of their parent.
// See http://stackoverflow.com/questions/1030793/input-with-displayblock-is-not-a-block-why-not
.input-width-auto(@width: 100%) {
	width: @width;
	.box-sizing(border-box);
}

// Adds a box shadow with a given blur length to the top and bottom only.
.box-shadow-top-bottom(@shadowBlurLength, @color) {
	// Less strips out the unit for this variable when we pass it into the escaped
	// string, so we manually put px in.
	@lengthWithUnit: "@{shadowBlurLength}px";
	.box-shadow(~"inset 0px @{lengthWithUnit} @{lengthWithUnit} -@{lengthWithUnit} @{color}, inset 0px -@{lengthWithUnit} @{lengthWithUnit} -@{lengthWithUnit} @{color}");
}

.icon40BackgroundPosition(@index:0)
 {
 	.icon {
		background-position:(-@index * @topnav-button-width) 0;
	}

	&:hover .icon {
		background-position:(-@index * @topnav-button-width) (-1 * @topnav-button-height); 
	} 
	&[aria-disabled] .icon, &[disabled] .icon, &[readonly] .icon,
	&:disabled .icon, &:readonly .icon {
		background-position:(-@index * @topnav-button-width) (-2 * @topnav-button-height); 
	} 
}

.transparentScrollbar()
{
	&::-webkit-scrollbar {
		opacity: 0;
	}
	
	// You can't specify "transparent", so we use the chroma filter to make a certain
	// hex value see through
	@transparentColor: #123456;
	filter:chroma(color=@transparentColor);
	scrollbar-base-color: @transparentColor;
	scrollbar-track-color: @transparentColor;
	scrollbar-3dlight-color: @transparentColor;
	scrollbar-darkshadow-color: @transparentColor;
	scrollbar-shadow-color: @transparentColor;
	scrollbar-highlight-color: @transparentColor;
	scrollbar-arrow-color: @transparentColor;
}

#translucent {
	.background-x-compatible(@color: #FFF, @alpha: 1) {
		@hue: hue(@color);
		@saturation: saturation(@color);
		@lightness: lightness(@color);
		@hexColor: hsl(@hue, @saturation, @lightness);
	
		// Fallback
		background-color: @hexColor;
		
		// Chrome/FF3+
		#translucent.background(@hexColor, @alpha);
		
		// Thanks to the following site for MS alpha background CSS & Maths
		//  http://robertnyman.com/2010/01/11/css-background-transparency-without-affecting-child-elements-through-rgba-and-filters/
		@alphaHex: `"#" + Math.floor(@{alpha} * 255).toString(16) + "@{hexColor}".substring(1)`;
		
		// IE7 Filter
		filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr=@{alphaHex}, endColorstr=@{alphaHex})";
		
		// IE8 filter
		-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=@{alphaHex}, endColorstr=@{alphaHex})";
	}
}

.input-highlight(@color: @common-element-focus-outline-color, @alpha: @common-element-focus-outline-alpha) {
	@hue: hue(@color);
	@saturation: saturation(@color);
	@lightness: lightness(@color);
	
	@hexColor: hsl(@hue, @saturation, @lightness);
	@alphaColor: hsla(@hue, @saturation, @lightness, @alpha);
	
	border-color: @hexColor;
	border-color: @alphaColor;
	outline: none;
	.box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px @{alphaColor}");
}

.input-error-highlight() {
	.input-highlight(@common-element-error-outline-color, @common-element-error-outline-alpha);
}

.input-revalidating-highlight() {
	.input-highlight(@common-element-revalidating-outline-color, @common-element-revalidating-outline-alpha);
}

.input-highlight-transition() {
	@transition: ~"border linear .2s, box-shadow linear .2s";
	.transition(@transition);
}


